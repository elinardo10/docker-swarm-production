services:
  mysql:
    image: mysql:8.0
    networks:
      - web
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: 'root'
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:latest
    networks:
      - web
    container_name: redis
    command: >
      redis-server --port 6379 --appendonly yes
    volumes:
      - evolution_redis:/data
    ports:
      - 6379:6379

  traefik:
    image: "traefik:v2.11.2"
    networks:
      - web
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
        #defina a mesma rede que vocÃª criou para o traefik
      - --providers.docker.network=web
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - "--accesslog.filepath=/data/access.log"
      - --api.dashboard=true
        # Config para SSL Lets Encrypt
      # altere para seu e-mail
      - --certificatesresolvers.leresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.leresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.leresolver.acme.email=${LETS_ENCRYPT_EMAIL}
      - --certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.leresolver.acme.tlschallenge=true
        # Global HTTP -> HTTPS
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --log.level=DEBUG
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/data/acme.json:/letsencrypt/acme.json"
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
    labels:
      # Dashboard
      - "traefik.http.routers.traefik.rule=Host(`traefik.vamopedir.com.br`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=leresolver"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.middlewares=authtraefik"
      - "traefik.http.middlewares.authtraefik.basicauth.users=user:$$apr1$$q8eZFHjF$$Fvmkk//V6Btlaf2i/ju5n/" # user/password
      
      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

        # labels pra test do oficl q tava ok:
       #  labels:
       # - "traefik.enable=true"
       # - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
       # - "traefik.http.middlewares.redirect-https.redirectscheme.permanent=true"
       # - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
       # - "traefik.http.routers.http-catchall.entrypoints=web"
       # - "traefik.http.routers.http-catchall.middlewares=redirect-https@docker"
       # - "traefik.http.routers.http-catchall.priority=1"

volumes:
  mysql_data:
  traefik-data:
  evolution_redis:

networks:
  web:
    external: true